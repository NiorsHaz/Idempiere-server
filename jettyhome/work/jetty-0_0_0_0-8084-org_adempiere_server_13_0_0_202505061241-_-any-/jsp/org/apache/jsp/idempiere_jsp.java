/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/12.0.11
 * Generated at: 2025-05-06 13:23:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.bmlaurus.home.Prop;

public final class idempiere_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("org.bmlaurus.home.Prop");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("Theme Name: iDempiere Theme\r\n");
      out.write("Version: 2.0\r\n");
      out.write("Description: iDempiere Theme\r\n");
      out.write("Author: BMLaurus\r\n");
      out.write("Author URI: http://www.bmlaurus.com\r\n");
      out.write("-->\r\n");
      out.write("<html>\r\n");
 Prop.load(); 
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"");
      out.print(Prop.loadCss());
      out.write("\">\r\n");
      out.write("	<script type=\"text/javascript\" src=\"resources/jquery/jquery.js\"></script>\r\n");
      out.write("	<title>");
      out.print(Prop.getProperty(Prop.TITLE) );
      out.write("</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"checkWebstoreLinks()\">\r\n");
      out.write("	<div id=\"body\" class=\"body\">\r\n");
      out.write("		<div id=\"toolBar\" class=\"toolBar\">\r\n");
      out.write("			<div id=\"toolBar-title\" class=\"toolBar-title\">\r\n");
      out.write("				<div id=\"credits\" style=\"color:#336699;\">\r\n");
      out.write("					");
      out.print(Prop.getProperty(Prop.CREDITS_TXT));
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"left_div\" id=\"title\">\r\n");
      out.write("					<p>");
      out.print(Prop.getProperty(Prop.CLIENT_NAME));
      out.write("</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"toolBar-tools\" class=\"toolBar-tools\">\r\n");
      out.write("				<a href=\"");
      out.print(Prop.getProperty(Prop.OPTION_LINK));
      out.write("\"  target=\"_blank\">\r\n");
      out.write("					<img name=\"img_option\" src=\"");
      out.print(Prop.getImage("img_option.png"));
      out.write("\" border=\"0\" title=\"");
      out.print(Prop.getProperty(Prop.OPTION_TEXT));
      out.write("\"/>\r\n");
      out.write("				</a>\r\n");
      out.write("				<a id=\"felixConsole\" href=\"");
      out.print(Prop.getProperty(Prop.FELIX_LINK));
      out.write("\">\r\n");
      out.write("					<img name=\"img_felix\" src=\"");
      out.print(Prop.getImage("img_felix.png"));
      out.write("\" border=\"0\" title=\"");
      out.print(Prop.getProperty(Prop.FELIX_TEXT));
      out.write("\"/>\r\n");
      out.write("				</a>\r\n");
      out.write("				<a id=\"ServerManagement\" href=\"");
      out.print(Prop.getProperty(Prop.MONITOR_LINK));
      out.write("\">\r\n");
      out.write("					<img name=\"img_idempiereMonitor\" src=\"");
      out.print(Prop.getImage("img_idempiereMonitor.png"));
      out.write("\" border=\"0\" title=\"");
      out.print(Prop.getProperty(Prop.MONITOR_TEXT));
      out.write("\"/>\r\n");
      out.write("				</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id =\"main\" class=\"main\">\r\n");
      out.write("			<div id=\"main-content\" class=\"main-content\">\r\n");
      out.write("				<div id=\"main-docuBtns\">\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li id=\"main-requestBtns-btnLogin\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.WEBUI_LINK));
      out.write("\" target=\"_self\">\r\n");
      out.write("								<img name=\"img_webui\" src=\"");
      out.print(Prop.getImage("img_webui.png"));
      out.write("\" border=\"0\" />\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.WEBUI_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li id =\"main-requestBtns-btnLocSupp\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.SUPPORT_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_locsupport\" src=\"");
      out.print(Prop.getImage("img_locsupport.png"));
      out.write("\" border=\"0\" />\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.LOCAL_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li id =\"main-requestBtns-btnResoc\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.RESOURCE_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_resource\" src=\"");
      out.print(Prop.getImage("img_resource.png"));
      out.write("\" border=\"0\" />\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.RESOURCE_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>																		\r\n");
      out.write("						<li id =\"main-docuBtns-btnWiki\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.WIKI_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_wiki\" src=\"");
      out.print(Prop.getImage("img_wiki.png"));
      out.write("\" border=\"0\" />\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.WIKI_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li id =\"main-docuBtns-btnForum\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.FORUMS_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_forum\" src=\"");
      out.print(Prop.getImage("img_forum.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.FORUMS_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li id =\"main-docuBtns-btnSuppReq\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.SUPPORTREQ_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_supreq\" src=\"");
      out.print(Prop.getImage("img_supreq.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.SUPPORTREQUEST_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li id =\"main-requestBtns-btnReq\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.WEBSTORE_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_webstore\" src=\"");
      out.print(Prop.getImage("img_webstore.png"));
      out.write("\" border=\"0\" />\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.WEBSTORE_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li id =\"main-requestBtns-btnSendReq\">\r\n");
      out.write("							<a href=\"");
      out.print(Prop.getProperty(Prop.SENDREQUEST_LINK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("								<img name=\"img_sendreq\" src=\"");
      out.print(Prop.getImage("img_sendreq.png"));
      out.write("\" border=\"0\" />\r\n");
      out.write("								<span class=\"main-txt-btn\">");
      out.print(Prop.getProperty(Prop.SENDREQUEST_TEXT));
      out.write("</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"main-background\">\r\n");
      out.write("					<img name=\"img_background\" src=\"");
      out.print(Prop.getImage("img_back.jpg"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"foot\" class=\"foot\">\r\n");
      out.write("			<div id=\"socialBar\" class=\"socialBar\">\r\n");
      out.write("				");
if(!Prop.getProperty(Prop.SOC_FACEBOOK).equals("") && !Prop.getProperty(Prop.SOC_FACEBOOK).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"facebook\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_FACEBOOK));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_facebook\" src=\"");
      out.print(Prop.getImage("img_facebook.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
} if(!Prop.getProperty(Prop.SOC_TWITTER).equals("") && !Prop.getProperty(Prop.SOC_TWITTER).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"twitter\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_TWITTER));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_twitter\" src=\"");
      out.print(Prop.getImage("img_twitter.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
} if(!Prop.getProperty(Prop.SOC_LINKEDIN).equals("") && !Prop.getProperty(Prop.SOC_LINKEDIN).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"linkedin\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_LINKEDIN));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_linkedin\" src=\"");
      out.print(Prop.getImage("img_linkedin.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
} if(!Prop.getProperty(Prop.SOC_GOOPLUS).equals("") && !Prop.getProperty(Prop.SOC_GOOPLUS).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"google+\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_GOOPLUS));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_googleplus\" src=\"");
      out.print(Prop.getImage("img_googleplus.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
} if(!Prop.getProperty(Prop.SOC_5).equals("") && !Prop.getProperty(Prop.SOC_5).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"soc5\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_LINKEDIN));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_soc5\" src=\"");
      out.print(Prop.getImage("img_soc5.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
} if(!Prop.getProperty(Prop.SOC_6).equals("") && !Prop.getProperty(Prop.SOC_6).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"soc6\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_LINKEDIN));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_soc6\" src=\"");
      out.print(Prop.getImage("img_soc6.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
} if(!Prop.getProperty(Prop.SOC_7).equals("") && !Prop.getProperty(Prop.SOC_7).equals("NONE")){
      out.write("\r\n");
      out.write("					<a id=\"soc7\" href=\"");
      out.print(Prop.getProperty(Prop.SOC_LINKEDIN));
      out.write("\" target=\"_blank\">\r\n");
      out.write("						<img name=\"img_soc7\" src=\"");
      out.print(Prop.getImage("img_soc7.png"));
      out.write("\" border=\"0\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("				");
}
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"footercopyright\">\r\n");
      out.write("				<p>&copy; Copyright 2013-");
      out.print(Prop.getYear());
      out.write(" iDempiere - All rights reserved</p>\r\n");
      out.write("				<p><a href=\"http://www.gnu.org/licenses/gpl-2.0.html\" target=\"blank\">iDempiere License is GPLv2</a></p>\r\n");
      out.write("				");
      out.print(Prop.getProperty(Prop.COPYRIGHT_TXT));
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>	\r\n");
      out.write("	<script>\r\n");
      out.write("		function checkWebstoreLinks() {\r\n");
      out.write("			try {\r\n");
      out.write("				var element = document.getElementById(\"main-requestBtns-btnReq\");\r\n");
      out.write("				var link = element.getElementsByTagName(\"a\")[0];\r\n");
      out.write("				var url = link.href;\r\n");
      out.write("				checkLink(element, url);\r\n");
      out.write("				\r\n");
      out.write("				element = document.getElementById(\"main-requestBtns-btnSendReq\");\r\n");
      out.write("				link = element.getElementsByTagName(\"a\")[0];\r\n");
      out.write("				url = link.href;\r\n");
      out.write("				checkLink(element, url);			\r\n");
      out.write("			} catch (error) {}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function checkLink(element, url) {\r\n");
      out.write("			var reader = new XMLHttpRequest();\r\n");
      out.write("			//asynchronous is true\r\n");
      out.write("			reader.open('get', url, true);\r\n");
      out.write("			//check each time the ready state changes\r\n");
      out.write("			//to see if the object is ready\r\n");
      out.write("			reader.onreadystatechange = checkReadyState;\r\n");
      out.write("\r\n");
      out.write("			function checkReadyState() {\r\n");
      out.write("			  if (reader.readyState === 4) {\r\n");
      out.write("			    //check to see whether request for the file failed or succeeded\r\n");
      out.write("			    if ((reader.status == 200) || (reader.status === 0)) {\r\n");
      out.write("			      ;\r\n");
      out.write("			    } else {\r\n");
      out.write("			      element.style.display = \"none\";\r\n");
      out.write("			    }\r\n");
      out.write("			  }\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			reader.send(null);\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
